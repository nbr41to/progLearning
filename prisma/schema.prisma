generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id                   String      @id @unique
  email                String      @unique
  plan                 Plan        @default(FREE)
  displayName          String
  isGettingLoginBonus  Boolean     @default(false)
  isFinishedRaidBattle Boolean     @default(false)
  isFinishedDailyQuest Boolean     @default(false)
  createdAt            DateTime    @default(now())
  // updatedAt            DateTime    @updatedAt
  profile              Profile?
  Stickis              Sticky[]
  Tasks                Task[]
  BattleLogs           BattleLog[]
}

enum Plan {
  FREE
  LITE
  CLOSER
}

model Profile {
  id        String  @id @unique
  user      User    @relation(fields: [userId], references: [id])
  userId    String  @unique
  bio       String?
  items     Json?
  equipment String?
}

model Sticky {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  title     String
  memo      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Task {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  content   String
  type      TaskType @default(TEMPORARY)
  done      Boolean  @default(false)
  current   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum TaskType {
  TEMPORARY // 一時的なタスク
  HABIT // 習慣化したいタスク
  DAILY // 毎日のタスク
}

model BattleLog {
  id          String   @id @default(cuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  isFinished  Boolean  @default(false)
  totalDamage Int      @default(0)
  createdAt   DateTime @default(now())
}
